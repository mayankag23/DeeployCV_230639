import cv2
import numpy as np
import matplotlib.pyplot as plt

# Function to apply a low-pass filter (Gaussian blur)
def low_pass_filter(image, kernel_size=(15, 15), sigma=10):
    return cv2.GaussianBlur(image, kernel_size, sigma)

# Function to apply a high-pass filter (subtract low-pass from original)
def high_pass_filter(image, low_pass_image):
    return image - low_pass_image

# Function to display images in a grid
def show_image(image, title, position):
    plt.subplot(2, 3, position)
    plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
    plt.title(title)
    plt.axis('off')

# Read the two images (replace with paths to your own images)
image1 = cv2.imread(r"C:\Users\mayan\OneDrive\Pictures\Camera Roll\WIN_20240917_14_10_21_Pro.jpg")  # Use raw string for path
image2 = cv2.imread(r"C:\Users\mayan\OneDrive\Pictures\Camera Roll\WIN_20231017_00_34_49_Pro.jpg")  # Use raw string for path

# Check if images were loaded properly
if image1 is None:
    raise ValueError("Error: Could not load image1. Check the file path.")
if image2 is None:
    raise ValueError("Error: Could not load image2. Check the file path.")

# Resize the images to be the same size
image2 = cv2.resize(image2, (image1.shape[1], image1.shape[0]))

# Apply low-pass filter to image1
low_pass_image1 = low_pass_filter(image1)

# Apply high-pass filter to image2
high_pass_image2 = high_pass_filter(image2, low_pass_filter(image2))

# Combine the images to create a hybrid image
hybrid_image = low_pass_image1 + high_pass_image2

# Plot the images
plt.figure(figsize=(12, 8))

# Show the original images and processed ones
show_image(image1, 'Original Image 1', 1)
show_image(image2, 'Original Image 2', 2)
show_image(low_pass_image1, 'Low-Pass Filtered Image 1', 3)
show_image(high_pass_image2, 'High-Pass Filtered Image 2', 4)
show_image(hybrid_image, 'Hybrid Image', 5)

# Display the result
plt.tight_layout()
plt.show()

